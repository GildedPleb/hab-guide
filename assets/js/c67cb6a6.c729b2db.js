"use strict";(self.webpackChunkhab_guide=self.webpackChunkhab_guide||[]).push([[3252],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>m});var o=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=o.createContext({}),h=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},d=function(e){var t=h(e.components);return o.createElement(l.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},p=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),c=h(n),p=a,m=c["".concat(l,".").concat(p)]||c[p]||u[p]||i;return n?o.createElement(m,r(r({ref:t},d),{},{components:n})):o.createElement(m,r({ref:t},d))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,r=new Array(i);r[0]=p;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[c]="string"==typeof e?e:a,r[1]=s;for(var h=2;h<i;h++)r[h]=n[h];return o.createElement.apply(null,r)}return o.createElement.apply(null,n)}p.displayName="MDXCreateElement"},3005:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>r,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var o=n(7462),a=(n(7294),n(3905));const i={title:"In Defense Of HAB Nodes"},r="In Defense Of HAB Nodes",s={type:"mdx",permalink:"/hab-guide/why",source:"@site/src/pages/why.md",title:"In Defense Of HAB Nodes",description:"Bitcoin, in whole, is a fundamentally robust, antifragile or highly available",frontMatter:{title:"In Defense Of HAB Nodes"}},l=[{value:"A Node Threat Model",id:"a-node-threat-model",level:2},{value:"What Matches The Threat Model?",id:"what-matches-the-threat-model",level:2},{value:"Why Is this Important?",id:"why-is-this-important",level:2},{value:"Reduction to Lost Income / HALX Option",id:"reduction-to-lost-income--halx-option",level:2},{value:"Self-hosting / Sovereign Option",id:"self-hosting--sovereign-option",level:2},{value:"Obscure Threat Mitigation / Hydra Option",id:"obscure-threat-mitigation--hydra-option",level:2},{value:"Forecasted Obsolescence / Induction Option",id:"forecasted-obsolescence--induction-option",level:2},{value:"Node Operators are First Class Voting Citizens, Only If/When Their Node is Running",id:"node-operators-are-first-class-voting-citizens-only-ifwhen-their-node-is-running",level:2},{value:"Core Developers",id:"core-developers",level:3},{value:"Miners",id:"miners",level:3},{value:"Commercial Nodes",id:"commercial-nodes",level:3},{value:"Node Operators At Large",id:"node-operators-at-large",level:3},{value:"Bitcoin Is. (And Will Always Be Under Attack)",id:"bitcoin-is-and-will-always-be-under-attack",level:2},{value:"Dissenting Opinion",id:"dissenting-opinion",level:2},{value:"Security",id:"security",level:3},{value:"Cost",id:"cost",level:3},{value:"Conclusion",id:"conclusion",level:2},{value:"&quot;OK, but isn&#39;t container orchestration <em>complete overkill</em>?&quot;",id:"ok-but-isnt-container-orchestration-complete-overkill",level:3},{value:"Do We Need This Solution?",id:"do-we-need-this-solution",level:2}],h={toc:l};function d(e){let{components:t,...i}=e;return(0,a.kt)("wrapper",(0,o.Z)({},h,i,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"in-defense-of-hab-nodes"},"In Defense Of HAB Nodes"),(0,a.kt)("p",null,"Bitcoin, in whole, is a fundamentally robust, antifragile or highly available\n(HA) system. Although most nodes are not HA, meaning it is unreasonable to\nexpect persistent connections to any randomly selected Bitcoin node, the design\nand incentives in Bitcoin as a whole ensure many nodes will always be available.\nStated differently, though individual nodes may crash, it is increasingly\ndifficult to get all the nodes worldwide to crash all at the same time. Because\nthe average node downtime will generally be a shorter interval than\nuninterrupted uptime for the same node, and because the incentives and consensus\nmechanisms in Bitcoin cause node running to be of importance, Bitcoin, at large,\nremains reachable:"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},'"Nodes can leave and rejoin the network at will"'),(0,a.kt)("p",{parentName:"blockquote"},"\u2014 Satoshi, Bitcoin White Paper")),(0,a.kt)("p",null,"Bitcoin uptime, as a whole, ",(0,a.kt)("a",{parentName:"p",href:"https://bitcoinuptime.org/"},"is outstanding"),", but\nthe low marks for the average node persist, for the average node does not have\nthe luxury of a distributed worldwide p2p incentive system optimized to keep it\nalive every second. Or at least, it doesn't ",(0,a.kt)("em",{parentName:"p"},"yet"),"."),(0,a.kt)("p",null,'A HAB Node does not change or attempt to fix anything about Bitcoins security or\noperational model network wide: Bitcoin does not need "fixing", which is why\nthis is being presented as an independent project and not a BIP. However,\nindividual implementations of running a node could use improvement, and\neventually, as self-hosted higher layers begin to dominate, ',(0,a.kt)("em",{parentName:"p"},"more serious issues\ncould develop for node operators if downtime is not adequately addressed"),"."),(0,a.kt)("p",null,"Amazingly, the incentives in Bitcoin will ",(0,a.kt)("em",{parentName:"p"},"force this problem to be fixed")," as we\nwill soon see, and motivate this very guide."),(0,a.kt)("h2",{id:"a-node-threat-model"},"A Node Threat Model"),(0,a.kt)("p",null,"In broad strokes, the node threat model can be characterized like so: With\nregard to threats, there are both known threats, and unknown threats in node\noperation. Known threats might include threats like hardware failure, or\ninternet disruption, things that are ordinary parts of computer operation, that\neveryone should know about, have experience with, and can already plan for. We\nalready expect that these will happen, but we don't know when. However, there\nare also unknown threats in node operation. Obscure threats such as a zero-day\nin a kernel, or compromised dependencies. These threats are both unknown, occur\nat unknown times, and may themselves go unnoticed for days, weeks, months, or\neven years."),(0,a.kt)("p",null,"To even begin to address these threats, asymmetric feats of engineering,\nplanning, and flexibility must be employed. Though many of these threats might\nbe mitigated in the source code, those solutions could be days, weeks, or months\naway. Considerable operational front loading at the edge, away from root cause,\nis the only practical way to make sure that any number of future probabilistic\ndowntime events aren't catastrophic for the non-developer (or even\nnon-technical) node operator, while root issues are addressed and fixed by those\nable. And to complicate it all the more, much, if not all of that front loaded\nengineering, may never be needed or used."),(0,a.kt)("p",null,"Thankfully, we know these efforts are not a waste of time and that they work\nbecause many systems exist which face similar kinds of threat models. Most\nnotably, the\u2014let's call it\u2014DNA model. Consider this, information systems and DNA\nare fundamentally alike: DNA is code. If Bitcoin is the organism, then nodes are\nthe individual cells. Each individual cell, alone, is entirely expendable by the\norganism, but only together do all the cells make the whole organism. Bitcoin\ndoes not exist to defend each node, but each node exists to serve a purpose for\nthe whole. As such, cells can only rely on minimal help from the larger organism\nand must chiefly employ their own internal threat mitigation technology to\ncontinue to allow them to execute on their purpose."),(0,a.kt)("p",null,'That technology set is encoded in the cells DNA. For any one cell to accomplish\nits purpose, it might only need to use a small fraction of the DNA available to\nit for the majority of its existence. "Junk DNA" might even argue for less than\n3%. But is the rest of the DNA really junk? By no means. Within the rest of the\nDNA (among many other things) there reside instruction on how to deal with\nuntold count of long dormant threats, unknown threat mitigation strategies,\nemergency protocols, communication and search mechanisms, and so much more.\nMolecular biology assumes "better to have it and not need it than need it and\nnot have it".'),(0,a.kt)("p",null,"Contrary to DNA's threat modeling and strategy, non-highly available node\noperators are unaware of the need (or flatly reject the need) to have this\nexpansive threat mitigation in place. Highly available node operators embrace\nthe DNA threat model, they adapt a similar philosophy to DNA, and run their\nnodes with the widest threat model they can muster in mind."),(0,a.kt)("h2",{id:"what-matches-the-threat-model"},"What Matches The Threat Model?"),(0,a.kt)("p",null,'As far as we are aware, only a Highly Available Node can address the most\nthreats posed in the threat model. High availability is exactly what it\nsuggests: a node which can not be taken down easily (unless its operator\nintentionally designs a kill switch). The "traditional" Raspberry Pi bitcoin\nnode (or any single-computer, run-at-home node), though extremely important for\neconomic, privacy, and security reasons, is not highly available, and can not\nbe. These nodes are chalk-full of single points of failure\u2014they do not have a\ndeep well of DNA playbooks ready to solve problems. If only one of those single\npoints fail, it could mean weeks of downtime for the individual node.'),(0,a.kt)("p",null,"The stated purpose of a Highly Available Bitcoin Node is to remove, as much as\nis reasonably feasible for the context which the node is operating in, all the\nsingle points of failure, both known and unknown. As such, a HAB node is\ndesigned from the ground up with this end in mind."),(0,a.kt)("h2",{id:"why-is-this-important"},"Why Is this Important?"),(0,a.kt)("p",null,"From this premise, we can begin to ask ",(0,a.kt)("em",{parentName:"p"},"why")," this is important, what specific\nbenefits it gains us, and what specific or unknown threats it curtails. Though\nthere are undoubtedly many more answers and points of discussion, these stand\nout and are worth elaborating on here:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Reduction to Lost Income / HALX Option"),(0,a.kt)("li",{parentName:"ul"},'Self-hosting / Sovereign Option ("Trusted Third Parties Are Security Holes")'),(0,a.kt)("li",{parentName:"ul"},"Obscure Threat Mitigation / Hydra Option"),(0,a.kt)("li",{parentName:"ul"},"Forecasted Obsolescence / Induction Option"),(0,a.kt)("li",{parentName:"ul"},"Node Operators are First Class Voting Citizens"),(0,a.kt)("li",{parentName:"ul"},"Bitcoin is. (And Will Always Be Under Attack)"),(0,a.kt)("li",{parentName:"ul"},"Dissenting Opinion Refutation")),(0,a.kt)("h2",{id:"reduction-to-lost-income--halx-option"},"Reduction to Lost Income / HALX Option"),(0,a.kt)("p",null,"It is becoming clear that higher layers of the stack will increasingly mean\nincome streams\u2014routing fees, streamed sats from podcast listens, gaming apps,\netc. As those income streams mature into living wages, it will become paramount\nfor security, autonomy, and privacy that privately operated, independent,\n",(0,a.kt)("a",{parentName:"p",href:"https://medium.com/shiftcrypto/we-need-bitcoin-full-nodes-economic-ones-fd17efcb61fb"},"economic nodes"),"\nprocess those transactions. Though transactions may only be delayed by downtime,\nthey can not be ultimately processed without compute, power, an internet\nconnection, and memory. As such, node downtime will soon mean either lost or\ndelayed living wages, bidirectional income flow imbalances, or sacrifices to\nprivacy, autonomy, security, independence, etc."),(0,a.kt)("p",null,"A highly available node alleviates this pressure. From the physical and data\ninputs, hardware layer, and up, it has the capacity to offer all services as\nhighly available, and thus reduce all possibilities of liquidity interruption."),(0,a.kt)("p",null,'For the purposes of this guide, we refer to this ability as "if and only if you\nhave a highly available bitcoin node, can you have a highly available layer X\nnode". H.A.B.N. \u21d4 H.A.L.X, or Highly Available Layer X Option. Put differently,\nif operators wish to have higher layers highly available (and they will for\nliquidity) then they will need to start at the physical and data inputs layer,\nthe hardware layer, and work through layer 1, Bitcoin. When higher layers become\neconomically viable, this is how the incentives in Bitcoin will ',(0,a.kt)("em",{parentName:"p"},"force the low\nmarks in average node operation to be remedied"),"."),(0,a.kt)("p",null,"The moment meaningful capital is involved on higher layers, where that capital\nis in competition to be earned or adversarially won (say, in the case of\navoiding financial censorship), combined with the moment a node operator is able\nto build a HAB Node, the incentives then align. From that moment forward, HAB\nNodes become the de facto basic utility to protect capital flows until yet more\nrobust engineering comes up with something better. Operators may not choose to\nemploy HAB nodes built from these pages, or with the technology therein, but at\nthe time of writing, no other class of node exists which addresses the concern."),(0,a.kt)("h2",{id:"self-hosting--sovereign-option"},"Self-hosting / Sovereign Option"),(0,a.kt)("p",null,"With the never ending stream of nefarious Big Tech / Gov involvement in or\nenabling of high profile hacks, censorship, property confiscation, privacy\nviolation, data mining and too many other rights and privacy infringing actions\nto count, many people have rightly leaned into the idea of self-hosting all\ntheir data, services and apps. HAB Nodes, by nature of their redundant and\noversupplied resources, greatly enable this functionality."),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Trusted Third Parties Are Security Holes"),(0,a.kt)("p",{parentName:"blockquote"},"\u2014 Nick Szabo")),(0,a.kt)("p",null,"Arbitrary services can be added to the cluster, including hooks, repository\nmirroring, and any other infrastructure. A HAB Node can thus operate as GitHub,\nDocker Hub, and a build server, hardening it against middle man failures from\nany of the above. All self-hosted and highly available."),(0,a.kt)("p",null,"Under such a setup, for instance, a node would be able to take full ownership of\nthe entire Bitcoin code pipeline, every dependency, and all code needed to do\nthis, build bitcoin from source code, from any branch or fork, automatically,\ntargeted to any architecture, and be a hosting location for others to find\nbitcoin implementations."),(0,a.kt)("p",null,"But it doesn't stop there, HAB Nodes would be great candidates for TOR relay\nnodes, and maybe even TOR exit nodes, but considerable research would be needed\nhere."),(0,a.kt)("p",null,"For the purposes of this guide, we refer to this as the Sovereign Option, as it\nmitigates MITM attacks. True, this kind of attack can be mitigated without HA,\nhowever, HA mitigates the attack far more robustly by providing the service the\nattack seeks to shut down in a highly available capacity."),(0,a.kt)("h2",{id:"obscure-threat-mitigation--hydra-option"},"Obscure Threat Mitigation / Hydra Option"),(0,a.kt)("p",null,"MITM attacks are fairly well understood. However, a HAB node accounts for\nbizarre, unknown, and/or unlikely attacks as well. Designed correctly, it is\ndecomposable into individual, self-sufficient nodes. Together, for the purposes\nof this guide, we call this the Hydra Option, as in some cases, it gives a node\nthe seemingly mythical power of growing back and multiplying new heads."),(0,a.kt)("p",null,"Potential scenarios for this optionality include, but are not limited to:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Most basically, it allows the node operator to cheaply diversify location as\na first order function of the node: run a cluster with a host at home, the\noffice, and at a family members house. It is then trivial to change from one\nto many nodes, or to slice off one or many parts, without taking down the\ncluster."),(0,a.kt)("li",{parentName:"ol"},"It allows the node operator to front run supply chain collapse for his\nimmediate meat-space network who may need to all-of-a-sudden place a bid on\nspinning up their own nodes."),(0,a.kt)("li",{parentName:"ol"},"In the case of an unlikely kinetic attack on a cluster that does not have\nlocational diversity, given enough warning, the HAB node can be fully split\nup and distributed, trivially changing from effectively one node to many,\nmultiplying the difficulty of the attack."),(0,a.kt)("li",{parentName:"ol"},"It fights against a \u201cVersion\u201d signalling Sybil Attack. An attack when bad\nactors spin up hundreds of AWS nodes to signal to the bitcoin network to push\nparticular protocol changes such as soft or hard forks. It fights this by\ngiving plebs control of more bitcoin instances."),(0,a.kt)("li",{parentName:"ol"},'Given a sufficiently distributed remote network of cloud hosts in a cluster,\nit allows the node operator to diversify himself out of physical node\noperation, while retaining high levels of security and independence. This,\nundoubtedly, would be expensive month to month, but might be able to be\nindependent of "Bitcoin" services entirely: anywhere a VPS can run might now\nalso have the ability to be a host in a HAB Node.'),(0,a.kt)("li",{parentName:"ol"},"When each decomposable unit is accompanied by a sufficiently powerful router\nand network broadcasting capabilities, it becomes not inconceivable to\nbootstrap a basic local or mico-local internet decoupled from the legacy\ninternet. Say, if the legacy internet gets co-opted. At time of writing, much\nresearch is still needed to make this a reality, however."),(0,a.kt)("li",{parentName:"ol"},"HAB Nodes can be expensive and normalizing expensive nodes is non-productive\nfor decentralizing Bitcoin. However, clustering nodes which employ the Hydra\nOption actually serves to make individual, non-HA nodes cheaper by creating a\nbigger market for singular nodes, allowing single-node manufacturing to dip\nmore into economies of scale. Furthermore, in a HAB denominated market,\nhardware products become more interesting to customers the more\ndifferentiated they are, as such, manufacturers no longer adversarially\ncompete for customers, operating under the assumption they will only buy one\nnode, but cooperatively compete for customers, operating under the assumption\nthey will buy multiple different individual nodes from a variety of\nmanufacturers. Naturally, this also invites new differentiated node\nmanufacturers to enter the space, just like a Hydra multiplying heads. Though\nit may be possible that some are infiltrated, it fights the likelihood that\nthey all are.")),(0,a.kt)("p",null,"Truly, it is a Hydra Option on many verticals."),(0,a.kt)("h2",{id:"forecasted-obsolescence--induction-option"},"Forecasted Obsolescence / Induction Option"),(0,a.kt)("p",null,"The blockchain, as far as we are concerned, will ",(0,a.kt)("em",{parentName:"p"},"always")," grow. And it will\nalways grow at or below a known rate: every 10 minutes a new block is added\nwhich does not exceed the block size maximum."),(0,a.kt)("p",null,"This means that all self-hosted blockchain storage options will eventually be\nexceeded. At the time of writing, depending on which flags you have set, the\nblockchain exceeds 500\xa0GB, this means that all non-pooled 500\xa0GB hard drives are\nnow obsolete if you wish to keep that set of flags."),(0,a.kt)("p",null,"Because these rates are known, we can easily plan ahead and determine, at the\nearliest, when our node might run out of storage. Problematically, in the case\nof a non-clustered node, this means a lot of work and planning to transition\nover to a larger hard drive: do we spin up a brand-new node? How do we transfer\nappropriate keys, accounts, channels, network connections, addresses, and end\npoints? How do we communicate about potential downtime? Etc. With a clustered\nnode, there is also some planning and difficulty involved, but it takes place\nfar in advance of need, happens once, and is far less difficult as entirely new\ncomputers can be provisioned without downtime or interrupting auxiliary\nservices. Once provisioned, new containers can be spun up as expansions of\nexisting clustered nodes, meaning they are automatically networked, load\nbalanced, and integrated with auxiliary services\u2014which could very will\neventually include keys, accounts, and wallets. For the purposes of this guide,\nwe call this the Induction Option: almost any hardware can be inducted into the\nnode with zero-downtime, and maintenance can also happen without downtime."),(0,a.kt)("p",null,"Further, once the old hard drive limits are exceeded and the hard drive can no\nlonger be used to hold the blockchain, it can still be used to service the node,\ngiving additional space to other containers that run on higher layers with\nsmaller footprints than the full blockchain. Returning to the DNA parallel, this\nprocess can be thought of as a type of autophagy."),(0,a.kt)("h2",{id:"node-operators-are-first-class-voting-citizens-only-ifwhen-their-node-is-running"},"Node Operators are First Class Voting Citizens, Only If/When Their Node is Running"),(0,a.kt)("p",null,"Many things were revealed in the block size wars of 2017. Not the least of which\nwas who is actually in control of Bitcoin. Up until 2017 a lot of doubt and\nuncertainty existed around who actually had the ability to affect Bitcoin\npolicy: was it the core developers, the miners, the node operators, commercial\nnodes, who?"),(0,a.kt)("h3",{id:"core-developers"},"Core Developers"),(0,a.kt)("p",null,"Through the events of 2017, and the User Activated Soft Fork (#UASF), it became\nclear that though the core developers could define some choices about what\nsoftware options existed, node operators made choices about how the protocol was\ndefined because they were the ones who ultimately ran the software. This was\nseen in how many core developers thought that #UASF was dangerous and did not\nsupport it, create it, or even touch it, yet, how node operators saw a bigger\npicture beyond technical reality, and became an intransigent minority, forcing\nthe #UASF policy through, despite developer protestations."),(0,a.kt)("h3",{id:"miners"},"Miners"),(0,a.kt)("p",null,"#UASF also revealed that miners are not bitcoin policymakers, but paid employees\nof the bitcoin network. When they saw that many nodes on the bitcoin network\nwere signaling for #UASF, they had to make a choice: risk mining blocks that\nwould be rejected by the network (aka, get fired), or support policies which\nagreed with #UASF (aka do what the boss says). Although miners do have a bigger\nvoice than bitcoin users who do not run nodes, 2017 showed us that node\noperators had authority over miners."),(0,a.kt)("h3",{id:"commercial-nodes"},"Commercial Nodes"),(0,a.kt)("p",null,'For our purposes, we will say that commercial nodes are nodes that are primarily\n"large" "crypto" business interests able to deploy a lot of capital toward their\nends. This group of node operators indeed has a vote, but they do not have a\nvoice which has influence over individual operators which must make their\ndecisions from first principles, not deep pockets.'),(0,a.kt)("p",null,"Further, commercial node opinions are mired in insider dealings, closed-source\ndevelopment, Sybil attacking node version signalling by spinning up hundreds of\nAWS nodes, getting hacked, defrauding users, and other shenanigans. In short,\nthough they may vote on bitcoin protocol rules, it is clear that their efforts\nwould be better spent trying to clean up their poor track records than publicly\nvoicing any opinion about Bitcoin."),(0,a.kt)("p",null,"In fact, the informed and responsible node running community should fully not\ntrust this group of operators, as an operational imperative, and fully verify\nall their claims. As was made evident by the\n",(0,a.kt)("a",{parentName:"p",href:"https://en.bitcoin.it/wiki/SegWit2x"},"SegWit2x")," attack on bitcoin, and the\noff-by-one-error in the SegWit2x nodes which killed the fork. Had the members of\nthe ",(0,a.kt)("a",{parentName:"p",href:"https://en.bitcoin.it/wiki/New_York_Agreement"},"New York Agreement"),"\nconvinced the greater bitcoin node running community to follow them into that\nmess, bitcoin would have experienced a very serious downtime event."),(0,a.kt)("h3",{id:"node-operators-at-large"},"Node Operators At Large"),(0,a.kt)("p",null,"From the above, it is clear that the individual node operator is the true\ninfluencer, defender, voter, and validator of the bitcoin protocol as they must\nmake choices from first principles. As such, it is up to us node operators to\nact as Senators for Bitcoin. Node operators are the operators of last resort.\nWhen their node is running, they are actively voting, actively defending,\nactively decentralizing, and actively influencing the direction of the network.\nWhen it is not running they are flatly not making those contributions,\nabdicating responsibility, and silencing their own voices."),(0,a.kt)("p",null,"HAB Nodes ensure the node is ",(0,a.kt)("em",{parentName:"p"},"always")," running."),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},'"This is my node. There are many like it, but this one is mine. My node is my\nbest friend. It is my life. I must master it as I must master my life. Without\nme, my node is useless. Without my node, I am useless. I must run my node\ntrue"')),(0,a.kt)("h2",{id:"bitcoin-is-and-will-always-be-under-attack"},"Bitcoin Is. (And Will Always Be Under Attack)"),(0,a.kt)("p",null,"At its simplest, a HAB Node is like a multi-sig wallet but for your node. If you\nlose one computer in the cluster for any number of reasons, the node remains\noperational, which is to say, a self-hosted Bitcoin instance remains operational\nand accessible to you. Not only does a HAB Node make the network more robust, it\nmakes your interaction with it more robust. Based purely on speculation, it is\nnone-the-less reasonable to deduce, that perhaps one of the biggest adversaries\nthat bitcoin has is node hardware failure\u2014thermodynamics itself\u2014which pushes to\ncentralize Bitcoin around nodes which are highly available. Formerly, this has\nmeant datacenter nodes."),(0,a.kt)("p",null,"In Bitcoin, whoever controls nodes, controls Bitcoin. And we should assume that\nfor years now, very moneyed interests have run replicated nodes in the cloud,\nusing the very same tech stack we are employing in this guide, for the purpose\nof having large stakes in the bitcoin p2p network. Indeed, companies exist to\nexplicitly run nodes in the cloud, and\n",(0,a.kt)("a",{parentName:"p",href:"https://blockdaemon.com"},"boast about doing exactly this")," for various\nblockchains. ",(0,a.kt)("img",{alt:"Nodes managed by blockdaemon",src:n(6978).Z,width:"2896",height:"420"})),(0,a.kt)("p",null,"This is great for shitcoins, as they are all designed to be attacked in this\nvery manner, but it is not for Bitcoin. Bitcoin is designed to be decentralized.\nIt is intolerable for Bitcoin to not be fully at the ready, and equipped with a\ncounterattack at the edge: the very technology and resources which give the\nattack any bite at all."),(0,a.kt)("p",null,"And this is only one of the persistent and known threats bitcoin faces. There\nare undoubtedly others, and we should assume that some may be backed by\nconsiderably more funding than a private or public company might control."),(0,a.kt)("p",null,"HAB Nodes give plebs the tools that the biggest, and most moneyed tech firms and\ngovernment institutions on earth use every day to defend trillions in value.\nThey ensure that plebs control as many nodes as possible at the edge of the\nnetwork by utilizing technology employed in datacenters at the center. And they\ngive plebs the power to ensure those nodes continue to function as intended by\nthe individual pleb."),(0,a.kt)("p",null,"HAB Nodes are an advance in the defense of the bitcoin network. For above all,\nit is paramount that Bitcoin survives. Every second Bitcoin survives is a second\ncloser to winning. We must have ",(0,a.kt)("em",{parentName:"p"},"constant vigilance"),"."),(0,a.kt)("h2",{id:"dissenting-opinion"},"Dissenting Opinion"),(0,a.kt)("p",null,"Is a HAB node a panacea? Far from it. Here are some oppositional arguments worth\naddressing and potential refutations:"),(0,a.kt)("h3",{id:"security"},"Security"),(0,a.kt)("p",null,"Though user error and environmental factors will also most likely be heightened\nsecurity problems under a HAB Node paradigm, those factors are also the case\nwith single node operation. Here are some security concerns that pertain\nspecifically to HAB Nodes:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("strong",{parentName:"li"},"Kubernetes Complexity.")," The security around Kubernetes is an\n",(0,a.kt)("a",{parentName:"li",href:"https://cloud.redhat.com/blog/most-common-kubernetes-security-issues-and-concerns-to-address"},"ongoing discussion"),"\nseriously worth addressing. Because Kubernetes is a complex ecosystem on top\nof a complex paradigm, it is very easily prone to miss-configuration, blind\nspots, and a host of niche problems which can open up security concerns for\nall involved."),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("strong",{parentName:"li"},"Attack Surface Multiplication.")," What is more, moving from one hardware\ndevice to many will mean multiplying attack surfaces for the node. This is\nalso true with the introduction of new dependencies that the node will need\nto function and thus Bitcoin will need to rely on. Each of these dependencies\nwill also bring a new attack surface. The same can be said for multiplying\nlocation and other forms of node diversification.")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Potential Refutation")),(0,a.kt)("p",null,"We can not claim to, in this guide, presently offer a robust security solution.\nIt should be noted here, as it is in the guide, ",(0,a.kt)("em",{parentName:"p"},"under no circumstances should\nprivate keys presently live on a HAB Node built from these pages"),". However, we\ndo have a few important frameworks in our favor that will allow us to start\nflushing out a robust solution both from first principles and practical reality:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("strong",{parentName:"li"},"Completely FOSS.")," From OS to Bitcoin, there are no parts of the stack\nwhich can not be fully understood and audited by anyone. As such, we adopt\nthe security model therein: public and open discussion, full accessibility to\nthe code, full community accountability, serious difficulty in injecting\nvulnerabilities, and so on."),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("strong",{parentName:"li"},"Complexity/Uniform Use Case.")," Unlike broad usage of K8s, everyone who runs\na HAB Node will more or less use similar plugins and apps, arrange the\ncluster in similar ways, and have the same security concerns. As such, we can\nbegin to find and build best practices and sensible defaults around HAB Nodes\nand HAB Node security. With proper Infrastructure As Code techniques, setup\ncan be very repeatable and testable, and it can responsibly account for\nfringe cases and minimize or remove setup/user errors. From here, because we\nare already relying on automation in the stack, we can implement and make use\nof practices like\n",(0,a.kt)("a",{parentName:"li",href:"https://www.bmc.com/blogs/security-as-code/"},"Security as Code"),"."),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("strong",{parentName:"li"},"Magnitude of Problem.")," Yes, building nodes on k8s is increasing dependency\nattack surface and can be viewed as inserting weakness. However, Kubernetes\ndefends trillions in value. It's not hard to extrapolate, that at all moments\nof Bitcoins history, k8s has defended more value than Bitcoin has. Far from\ninserting a weakness into the Bitcoin stack, strictly in terms of value\ndefended, building nodes on k8s may actually be inserting strength, whereas\nbuilding k8s on bitcoin might be inserting weakness. Yes, Bitcoin's value\nlies behind ",(0,a.kt)("em",{parentName:"li"},"one")," protocol, while the value defended by k8s is behind\nthousands of companies, code implementations, and custom k8s configurations,\nbut at some level, value is value."),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("strong",{parentName:"li"},"Multi-Sig Wallet Wisdom")," What is more, multi-sig wallet implementations\nand multi-sig wallet providers have given considerable thought to how to\nsecure multi-point systems and how to think about these systems adversarially\nand tactically. There is of course no direct mapping here, but there is\nconsiderable wisdom to be gleaned from the solutions and best practices\nproduced in multi-sig wallet management."),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("strong",{parentName:"li"},"Multiplying Attack Surface"),": Yes, we are multiplying attack surface, but\nwe are also multiplying the options for healthy node operation. We are not\nmeaninglessly opening up ports on our computer, these are real security\nadvancements, in a real security trade-off. A trade-off trillions of dollars\nin legacy tech value makes every day.")),(0,a.kt)("h3",{id:"cost"},"Cost"),(0,a.kt)("p",null,"Apart from the reality that HAB Nodes can potentially cost unlimited amounts, it\nwill remain true that it is sufficient and necessary for a HAB Node to be at\nminimum two or preferably three hosts (depending on k8s availability mode) and a\nrouter. This will always be more expensive than a single node on the most\nexpensive host of the same group, without a dedicated router. This has these\nknock on effects:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Multiplying hosts may be non-productive for keeping Bitcoin decentralized."),(0,a.kt)("li",{parentName:"ol"},"HAB Nodes present messaging problems that may confuse people out of running a\nsingle node at all."),(0,a.kt)("li",{parentName:"ol"},"Strictly on cost alone, they may price out participation.")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Potential Refutation")),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("strong",{parentName:"li"},"Anti-decentralization.")," We believe that this argument only has merit if\nHAB Nodes are designed in such a way that the\n",(0,a.kt)("a",{parentName:"li",href:"#obscure-threat-mitigation--hydra-option"},"Hydra Option"),' is not employed. For\ninstance, if instead of diversifying hosts, a consumer pooled the entire\nbudget into one host and then ran a k8s cluster on VMs on that host to create\na "HAB Node". In such a case, all those resources can only function together,\nthey have at least one practical similarity with a cloud based node: they are\nnot as friendly with decentralization as they could be. With a Hydra Option,\ndecentralization is at worst a forever potentiality, at best it is a fully\noperational part of the HAB Node. What is more, some long term effects of\nenabling a Hydra Option might actually create more diversity, and thus\ndecentralization, in node hardware.'),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("strong",{parentName:"li"},"Messaging Problem.")," Indeed,\n",(0,a.kt)("a",{parentName:"li",href:"/docs/Introduction/who#who-is-this-not-for"},"care should be taken")," to not mix\nmessaging: running a HAB Node ",(0,a.kt)("em",{parentName:"li"},"should not"),' be anyone\'s first node. If a\npotential node running pleb is asking "Should I get a HAB node or a regular\nnode?" and that question is preventing them from running any node at all, we\nthink that it is fair to conclude that person has way too big a budget, which\nwill be a vast minority of potential node operators. For such a person, they\nshould re-evaluate the budget for the purpose of running a single node, buy\nBitcoin with the surplus, and once it has sufficiently appreciated, expand\ntheir node. It should be obvious to all economically constrained participants\nthat running a single node is cheaper, faster, and easier to understand. What\nis more, running a single node, in many cases, will be the first hardware\nacquisition for a future HAB Node,\n',(0,a.kt)("a",{parentName:"li",href:"/poc#looking-back"},"as was the case for the PoC"),"."),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("strong",{parentName:"li"},"Priced Out Of Participation.")," Again, HAB Nodes should not be anyone's\nfirst node. However, they can very easily be someone second node. And they\nshould be a second node over the current alternative of Lightning Service\nProvider for the sufficiently sophisticated Bitcoiner, and once ligntning\nfunctionality makes its way to the HA universe. To be clear, we think it is a\nnet benefit that someone might first choose an LSP before ever running their\nown node, but once they run their own node, then the next node should be a\nHAB Node, for a HAB Node, in the long run (but not presently), eliminates the\nneed of an LSP. As for cost, or being priced out of participation, this\npathing is key. At it's simplest, a HAB node is no less than two nodes and a\nrouter. Almost everyone already has a wifi router, so, after they purchase\ntheir first single-node, which every Bitcoiner should have done already (or\nis about to do), they are then only one purchase away from a HAB Node. In all\nlikelihood, their first node would at some point be dated hardware that could\nuse replacing, or be out of storage. But it would also most likely be able to\nenter a new cluster because of the\n",(0,a.kt)("a",{parentName:"li",href:"#forecasted-obsolescence--induction-option"},"Induction Option"),", and as such,\nthis relieves the pressure of planning far ahead and purchasing high-end,\nlonger lasting hardware for more money and replaces it with affordable and\nincremental purchases as need or want arises because hardware in a HAB Node\nis infinitely replaceable. Far from pricing people out of participation, it\nmight actually, in the long run, price in more participation.")),(0,a.kt)("p",null,"Undoubtedly there are more dissenting opinions than these. If you have one,\nplease don't hesitate to open a PR. If it is well argued it will be added to the\nlist, and hopefully there will be a decent refutation as well."),(0,a.kt)("h2",{id:"conclusion"},"Conclusion"),(0,a.kt)("p",null,"In 2008,\n",(0,a.kt)("a",{parentName:"p",href:"https://satoshi.nakamotoinstitute.org/emails/cryptography/2/#selection-81.0-81.620"},"Satoshi himself"),"\nopined on issues of availability and node management:"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"At first, most users would run network nodes, but as the network grows beyond\na certain point, it would be left more and more to specialists with server\nfarms of specialized hardware. A server farm would only need to have one node\non the network and the rest of the LAN connects with that one node.")),(0,a.kt)("p",null,"BCH and BSV adherents often quote this email in defense of large blocks. But\nthis was written 4 years before the launch of Raspberry Pi (and the explosion of\ncheap consumer SBCs), 5 years before Docker really made sense of containers, 4\nyears before Ansible made provisioning and automation intuitive, and 7 years\nbefore the robust FOSS orchestration technology of Kubernetes arrived. As such,\nthe key technologies which make HAB Nodes possible came after Satoshi's time in\ntheir individual niche settings."),(0,a.kt)("p",null,"Even if the need to solve the problem of delivering highly available node\ninfrastructure was deeply felt by Satoshi\u2014for instance, if he meant LAN\nconnections to server farms to mean the LAN network of self-hosted households\nrunning HA Nodes\u2014there wasn't an actionable or accessible way forward when he\nwrote those lines. The prevailing way forward was not through container\norchestration, but was as Satoshi said: primarily through specialized hardware\nrun by specialists."),(0,a.kt)("p",null,"Now, thanks to Satoshi's efforts to design Bitcoin so robustly, to Core's\nefforts to expand on this premise, the efforts of #UASF to keep the cost of a\nminimally viable node as small as possible while scaling, the fantastic work\nbeing done in the microcomputer / SBC industry, the ingeniousness of DevOps\nengineers to automate provisioning, and the unparalleled work done in containers\nand container orchestration, we now no longer face these issues. And we should\npursue those advancements for the health, preservation, decentralization,\npermanence, and robustness of Bitcoin. The more we push on clustered edge nodes,\nthe more the entire bitcoin ecosystem improves."),(0,a.kt)("p",null,"Contrary to what Satoshi seems to have meant, a home-server HAB Node should run.\nIt should run many Bitcoin instances, it should run on a diversity of easily\nacquirable consumer hardware, it should be provisioned via simple processes, and\nnode operators need not be server specialist for this robust version of node\noperation to be reality. As you'll see in the guide, setting up a HAB node is\n",(0,a.kt)("a",{parentName:"p",href:"/docs/Introduction/what#the-content-vs-the-commands"},"well within")," the range of\nwhat a simple GUI might need, ",(0,a.kt)("em",{parentName:"p"},"already"),"."),(0,a.kt)("h3",{id:"ok-but-isnt-container-orchestration-complete-overkill"},"\"OK, but isn't container orchestration ",(0,a.kt)("em",{parentName:"h3"},"complete overkill"),'?"'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Yes. And that's the entire point.")),(0,a.kt)("p",null,"Let us not forget that this is Bitcoin we are defending, the first money in\nhuman history which does not commit time theft. The first honest money. The\nfirst money to empower all people equally and the first money to tell the truth."),(0,a.kt)("p",null,"Let's put it to scale: using container orchestration to defend Bitcoin is akin\nto deploying an aircraft carrier to make a routine arrest of what appears to be\na petty criminal. Be it unlikely, we'd rather have the Seal Team on the Aircraft\nCarrier be able to extract and safely dispose of a dirty nuke, with every\npossible resource available to them, and do so within minutes, should a nuke be\nconcealed by he who we at first thought was a petty criminal. It may not seem\nobvious at first blush, but the choice to use k8s becomes more and more\nappealing as a solution to the problem at hand the deeper you understand the\nasymmetric difficulty of running highly available infrastructure, and what is\nneeded to meet a truly unknown-depth threat model. Again, looking to DNA as a\nguide, we see there is no better way forward, for it is how we as the human\nspecies, and all life which uses DNA, function at the cellular level."),(0,a.kt)("p",null,"Interestingly, the analogy above may not even cut deep enough. An aircraft\ncarrier costs somewhere north of $10 Billion to make, whereas $56.5 Billion has\nbeen invested in the\n",(0,a.kt)("a",{parentName:"p",href:"https://landscape.cncf.io/?grouping=no&sort=amount"},"landscape and infrastructure"),"\nin and around Kubernetes\u2014the CNCF ",(0,a.kt)("em",{parentName:"p"},"exists")," because of Kubernetes. We should be\nrunning HAB nodes to incorporate as much of that incredible work, deep wisdom,\nand experience as possible."),(0,a.kt)("p",null,"Indeed, there are other ways to solve the problems that a HAB Node solves, and\nsolve them cleanly without the dependencies we introduce to do it (",(0,a.kt)("inlineCode",{parentName:"p"},"systemd"),",\nrunning multiple un-clustered nodes, for instance). But pursuing all of those\noptions, to their ultimate ends, eventually means creating a new form of highly\navailable infrastructure which solves all the exact same problems that k8s\nalready solves and has been solving for a decade in defense of trillions more in\nvalue than Bitcoin. If the legacy internet is increasingly becoming a walled\ngarden, and the peer web is the future, who knows whether Kubernetes came to be\nfor such a time as this?"),(0,a.kt)("p",null,"There is no need to reinvent this wheel, we simply need to ",(0,a.kt)("em",{parentName:"p"},"use it"),", and we\nalready can, as the PoC demonstrates."),(0,a.kt)("h2",{id:"do-we-need-this-solution"},"Do We Need This Solution?"),(0,a.kt)("p",null,"Yes. Resoundingly so. To step back, the problem we face is small at the moment,\nand not without its difficulties, but it carries all the characteristics of a\nproblem that will only increasingly become more evident as the self-hosted\nBitcoin node ecosystem continues to mature into the ",(0,a.kt)("em",{parentName:"p"},"very source")," of wages,\ncircular economy, capital flows, and human flourishing the world over."),(0,a.kt)("hr",null),(0,a.kt)("p",null,"For a more in depth explanation on how this is accomplished, see ",(0,a.kt)("a",{parentName:"p",href:"/how"},"How?")))}d.isMDXComponent=!0},6978:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/nodes_managed-16c9ec8b396cd4131229ec895b3fb947.png"}}]);