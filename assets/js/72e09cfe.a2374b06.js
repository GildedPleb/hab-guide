"use strict";(self.webpackChunkhab_guide=self.webpackChunkhab_guide||[]).push([[2153],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>p});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=a.createContext({}),l=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=l(e.components);return a.createElement(c.Provider,{value:t},e.children)},h="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},b=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,c=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),h=l(n),b=o,p=h["".concat(c,".").concat(b)]||h[b]||u[b]||r;return n?a.createElement(p,i(i({ref:t},d),{},{components:n})):a.createElement(p,i({ref:t},d))}));function p(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,i=new Array(r);i[0]=b;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[h]="string"==typeof e?e:o,i[1]=s;for(var l=2;l<r;l++)i[l]=n[l];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}b.displayName="MDXCreateElement"},5873:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>r,metadata:()=>s,toc:()=>l});var a=n(7462),o=(n(7294),n(3905));const r={title:"A Caught in the Wild Case Study on HAB Node Importance",description:"Actual fail logs from a failed node, and the k8s responce",slug:"Case-study-1",authors:"endi",tags:["Case-Study","Failure-Recovery"],hide_table_of_contents:!1},i=void 0,s={permalink:"/hab-guide/blog/Case-study-1",editUrl:"https://github.com/GildedPleb/hab-guide/edit/master/blog/2022-04-02-caught-in-the-wild.md",source:"@site/blog/2022-04-02-caught-in-the-wild.md",title:"A Caught in the Wild Case Study on HAB Node Importance",description:"Actual fail logs from a failed node, and the k8s responce",date:"2022-04-02T00:00:00.000Z",formattedDate:"April 2, 2022",tags:[{label:"Case-Study",permalink:"/hab-guide/blog/tags/case-study"},{label:"Failure-Recovery",permalink:"/hab-guide/blog/tags/failure-recovery"}],readingTime:2.785,hasTruncateMarker:!0,authors:[{name:"Gilded Pleb",title:"Maintainer of HAB Node Project",url:"https://github.com/GildedPleb",email:"gildedpleb@protonmail.com",imageURL:"https://github.com/gildedpleb.png",key:"endi"}],frontMatter:{title:"A Caught in the Wild Case Study on HAB Node Importance",description:"Actual fail logs from a failed node, and the k8s responce",slug:"Case-study-1",authors:"endi",tags:["Case-Study","Failure-Recovery"],hide_table_of_contents:!1}},c={authorsImageUrls:[void 0]},l=[{value:"A Node Watchman",id:"a-node-watchman",level:3}],d={toc:l};function h(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"To provide some context around why HAB Nodes are practically important, this is\na real log from ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/btcsuite/btcd"},"btcd")," syncing the bitcoin\nlive net that we witnessed which demonstrates the power of HAB Nodes:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-log"},"2022-04-02 19:16:05.338 [INF] SYNC: Processed 7 blocks in the last 11.34s (5235 transactions, height 681505, 2021-05-02 09:19:37 +0000 UTC)\n2022-04-02 19:16:15.370 [INF] SYNC: Processed 6 blocks in the last 10.03s (7148 transactions, height 681511, 2021-05-02 10:08:49 +0000 UTC)\n2022-04-02 19:16:25.801 [INF] SYNC: Processed 7 blocks in the last 10.43s (5342 transactions, height 681518, 2021-05-02 10:33:55 +0000 UTC)\n2022-04-02 19:16:35.489 [INF] SYNC: Rejected block 0000000000000000000c0b575b54782ac1233b52167a4360b387a92aad6d5c36 from 106.70.152.247:8333 (outbound): output fb1e8da2c605b140af57988ebfd01337c48981b6bea574814471888644a87179:374 referenced from transaction 574ed80323af61a44fde23fdfa353d9fcfd4044e746e5d71bb677539873a4d69:81 either does not exist or has already been spent\n2022-04-02 19:16:35.505 [INF] SYNC: Rejected block 00000000000000000000a62dbd00aac10221e14ee31e4ccf0f69b5992ef2dc09 from 106.70.152.247:8333 (outbound): previous block 0000000000000000000c0b575b54782ac1233b52167a4360b387a92aad6d5c36 is known to be invalid\n2022-04-02 19:16:35.520 [INF] CHAN: Adding orphan block 0000000000000000000504f79236c4c8cbfee36d23250d3e4b741f0866578586 with parent 00000000000000000000a62dbd00aac10221e14ee31e4ccf0f69b5992ef2dc09\n...\n")),(0,o.kt)("p",null,"Depending on ones node setup, an event like this might terminate the node, as 1\nminute later, this node was terminated:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-log"},"2022-04-02 19:17:31.986 [INF] CHAN: Adding orphan block 00000000000000000002fb1e3184747bf39b69a1d12d4fa0c27e333e916e10ad with parent 000000000000000000029b9cf49faf90b0a83041c399abf1cef921456132ef20\n2022-04-02 19:17:33.965 [INF] CHAN: Adding orphan block 0000000000000000000314d2b93903aab6bc9f12401eeb2d98ac5e641352a355 with parent 00000000000000000002fb1e3184747bf39b69a1d12d4fa0c27e333e916e10ad\n2022-04-02 19:17:34.270 [INF] BTCD: Received signal (terminated).  Shutting down...\n2022-04-02 19:17:34.270 [INF] BTCD: Gracefully shutting down the server...\n2022-04-02 19:17:34.270 [WRN] SRVR: Server shutting down\n...\n2022-04-02 19:17:34.278 [INF] SRVR: Server shutdown complete\n2022-04-02 19:17:34.278 [INF] BTCD: Gracefully shutting down the database...\n2022-04-02 19:17:34.279 [INF] BTCD: Shutdown complete\n")),(0,o.kt)("p",null,"Even if this was an ephemeral or user error (btcd was not shut down by the\noperator, but it may have been miss-configured), btcd has encountered events\nlike this in ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/btcsuite/btcd/issues/1024"},"the past"),". It would\nbe optimistic, at best, to think that ",(0,o.kt)("em",{parentName:"p"},"any")," FOSS node implementation is immune\nfrom such events, which moving forward, might manifest themselves as zero-days,\nfor zero-days are a problem inherent to all software."),(0,o.kt)("h3",{id:"a-node-watchman"},"A Node Watchman"),(0,o.kt)("p",null,"There is something to be said for sussing out root issues, submitting PRs, and\ngetting issues resolved at the source, but there is also something to be said\nfor end user plebs who can not code, having the power to diversify away this\nkind of risk entirely."),(0,o.kt)("p",null,"Among other things, a HAB Cluster accomplishes this: it becomes the dedicated\nwatchman of all local nodes."),(0,o.kt)("p",null,"The above logs were from a Kubernetes pod in the ",(0,o.kt)("a",{parentName:"p",href:"/poc"},"Proof Of Concept")," HAB\nnode. Within 30 seconds of the node shutting down, Kubernetes saw the\ndegradation in service, rebooted the node, and it re-synced past the problematic\nblock, without any human intervention:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-log"},"2022-04-02 19:18:04.431 [INF] BTCD: Version 0.22.0-beta\n2022-04-02 19:18:04.432 [INF] BTCD: Loading block database from '/root/.btcd/mainnet/blocks_ffldb'\n2022-04-02 19:18:04.932 [INF] BCDB: Detected unclean shutdown - Repairing...\n2022-04-02 19:18:04.938 [INF] BCDB: Database sync complete\n2022-04-02 19:18:04.938 [INF] BTCD: Block database loaded\n...\n2022-04-02 19:21:20.284 [INF] SYNC: Processed 2 blocks in the last 12.31s (1834 transactions, height 681515, 2021-05-02 10:29:45 +0000 UTC)\n2022-04-02 19:21:35.062 [INF] SYNC: Processed 3 blocks in the last 14.77s (1878 transactions, height 681518, 2021-05-02 10:33:55 +0000 UTC)\n2022-04-02 19:21:49.979 [INF] SYNC: Processed 2 blocks in the last 14.91s (2319 transactions, height 681520, 2021-05-02 10:37:27 +0000 UTC)\n")),(0,o.kt)("p",null,"But more importantly than that, the HAB node itself, which was simultaneously\nrunning bitcoind, experienced no downtime from the perspective of the bitcoin\nnetwork or any higher layers running locally, were there any at the time of\nrunning this sync."))}h.isMDXComponent=!0}}]);